#!/usr/bin/env python3
"""
Script ƒë·ªÉ test k·∫øt n·ªëi MongoDB b√™n ngo√†i Streamlit
Ch·∫°y b·∫±ng l·ªánh: python test_mongodb.py
"""
import sys
from pymongo import MongoClient

def test_mongodb_connection(mongo_uri):
    """Test MongoDB connection v·ªõi nhi·ªÅu ph∆∞∆°ng ph√°p kh√°c nhau"""
    
    print("üîÑ ƒêang test k·∫øt n·ªëi MongoDB...")
    print(f"URI: {mongo_uri[:20]}...")  # Ch·ªâ hi·ªán m·ªôt ph·∫ßn URI cho b·∫£o m·∫≠t
    
    methods = [
        {
            "name": "Ph∆∞∆°ng ph√°p 1: TLS hi·ªán ƒë·∫°i",
            "config": {
                "serverSelectionTimeoutMS": 30000,
                "connectTimeoutMS": 30000,
                "socketTimeoutMS": 30000,
                "tls": True,
                "tlsAllowInvalidCertificates": True,
                "retryWrites": True,
                "w": 'majority'
            }
        },
        {
            "name": "Ph∆∞∆°ng ph√°p 2: SSL legacy",
            "config": {
                "serverSelectionTimeoutMS": 30000,
                "connectTimeoutMS": 30000,
                "socketTimeoutMS": 30000,
                "ssl": True,
                "ssl_cert_reqs": None,
                "retryWrites": True
            }
        },
        {
            "name": "Ph∆∞∆°ng ph√°p 3: C∆° b·∫£n",
            "config": {
                "serverSelectionTimeoutMS": 30000
            }
        }
    ]
    
    for method in methods:
        print(f"\nüì° {method['name']}...")
        try:
            client = MongoClient(mongo_uri, **method['config'])
            result = client.admin.command('ping')
            print(f"‚úÖ TH√ÄNH C√îNG! Ping result: {result}")
            
            # Test th√™m m·ªôt s·ªë operations
            db = client["test_db"]
            collection = db["test_collection"]
            
            # Test insert
            test_doc = {"test": "document", "timestamp": "2024"}
            insert_result = collection.insert_one(test_doc)
            print(f"‚úÖ Insert th√†nh c√¥ng: {insert_result.inserted_id}")
            
            # Test find
            found_doc = collection.find_one({"_id": insert_result.inserted_id})
            print(f"‚úÖ Find th√†nh c√¥ng: {found_doc}")
            
            # Cleanup
            collection.delete_one({"_id": insert_result.inserted_id})
            print("‚úÖ Cleanup th√†nh c√¥ng")
            
            client.close()
            print(f"üéâ {method['name']} HO√ÄN TO√ÄN TH√ÄNH C√îNG!")
            return True
            
        except Exception as e:
            print(f"‚ùå TH·∫§T B·∫†I: {e}")
    
    print("\n‚ùå T·∫•t c·∫£ ph∆∞∆°ng ph√°p ƒë·ªÅu th·∫•t b·∫°i!")
    return False

if __name__ == "__main__":
    # Nh·∫≠p MongoDB URI
    if len(sys.argv) > 1:
        mongo_uri = sys.argv[1]
    else:
        mongo_uri = input("Nh·∫≠p MongoDB URI: ")
    
    if not mongo_uri:
        print("‚ùå Vui l√≤ng cung c·∫•p MongoDB URI!")
        sys.exit(1)
    
    success = test_mongodb_connection(mongo_uri)
    sys.exit(0 if success else 1) 